// <auto-generated />
using Lista10.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lista10.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20240113162520_CategoryChanges")]
    partial class CategoryChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lista10.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            ArticleName = "Apple",
                            CategoryId = 2,
                            Image = "upload/apples.jpg",
                            Price = 2.99m
                        },
                        new
                        {
                            ArticleId = 2,
                            ArticleName = "Banana",
                            CategoryId = 2,
                            Image = "upload/banana.jpg",
                            Price = 3.99m
                        },
                        new
                        {
                            ArticleId = 3,
                            ArticleName = "Orange",
                            CategoryId = 2,
                            Price = 4.99m
                        },
                        new
                        {
                            ArticleId = 4,
                            ArticleName = "Sugar",
                            CategoryId = 1,
                            Price = 5.99m
                        },
                        new
                        {
                            ArticleId = 5,
                            ArticleName = "Potato",
                            CategoryId = 3,
                            Price = 6.99m
                        },
                        new
                        {
                            ArticleId = 6,
                            ArticleName = "Cucumber",
                            CategoryId = 3,
                            Image = "upload/cucumber.jpg",
                            Price = 7.99m
                        },
                        new
                        {
                            ArticleId = 7,
                            ArticleName = "Beef",
                            CategoryId = 4,
                            Price = 8.99m
                        },
                        new
                        {
                            ArticleId = 8,
                            ArticleName = "Pork",
                            CategoryId = 4,
                            Price = 9.99m
                        },
                        new
                        {
                            ArticleId = 9,
                            ArticleName = "Chicken",
                            CategoryId = 4,
                            Price = 10.99m
                        },
                        new
                        {
                            ArticleId = 10,
                            ArticleName = "Salmon",
                            CategoryId = 5,
                            Price = 11.99m
                        });
                });

            modelBuilder.Entity("Lista10.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Sweets"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Fruits"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Vegetables"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Meat"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Fish"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Pasta"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Bread"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Cereals"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Drinks"
                        });
                });

            modelBuilder.Entity("Lista10.Models.Article", b =>
                {
                    b.HasOne("Lista10.Models.Category", null)
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lista10.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
